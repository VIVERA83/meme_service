services:
  minio:
    restart: always
    container_name: minio_mem
    image: minio/minio:latest
    command: server --console-address ":${MINIO_PORT_2}" /data/
    ports:
      - ${MINIO_PORT_1}:${MINIO_PORT_1}
      - ${MINIO_PORT_2}:${MINIO_PORT_2}
    env_file:
      - .env
    volumes:
      - minio-storage:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    restart: always
    container_name: postgres_mem
    image: postgres:15
    volumes:
      - postgres_storage:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -V" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
          - ${POSTGRES_PORT}:${POSTGRES_PORT}
    command: -p ${POSTGRES_PORT}

  mem_api:
    restart: always
    container_name: mem_api
    build:
      context: mem_api
      dockerfile: Dockerfile
    env_file:
      -  mem_api/.env_mem_api
    ports:
      - 8006:8006
    depends_on:
      - postgres
      - minio
#    volumes:
#      - ./mem_api/mem_api:/mem_api

  meme_storage:
    restart: always
    container_name: meme_storage
    build:
      context: meme_storage
      dockerfile: Dockerfile
    env_file:
      - meme_storage/.env_image_store
    ports:
          - 8005:8005
    depends_on:
      - minio
#    volumes:
#      - ./meme_storage/meme_storage:/meme_storage

  migration_meme_center:
    build:
      context: mem_api
      dockerfile: Dockerfile
    env_file:
      -  mem_api/.env_mem_api
    depends_on:
      - postgres
    command: alembic upgrade head

volumes:
  minio-storage:
  postgres_storage:

